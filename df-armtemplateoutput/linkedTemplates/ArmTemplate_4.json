{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-armtemplateoutput"
		},
		"Tumbling_properties_pipeline_parameters_tableinput": {
			"type": "string",
			"defaultValue": "Cust"
		},
		"Tumbling_properties_pipeline_parameters_windowStartTime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"Tumbling_properties_pipeline_parameters_windowEndTime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "tumbling",
						"type": "PipelineReference"
					},
					"parameters": {
						"tableinput": "[parameters('Tumbling_properties_pipeline_parameters_tableinput')]",
						"windowStartTime": "[parameters('Tumbling_properties_pipeline_parameters_windowStartTime')]",
						"windowEndTime": "[parameters('Tumbling_properties_pipeline_parameters_windowEndTime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2023-08-27T05:47:00Z",
					"endTime": "2023-09-08T05:47:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Alterrow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sqlempdataset",
								"type": "DatasetReference"
							},
							"name": "Empdataset"
						},
						{
							"dataset": {
								"referenceName": "Deptdataset",
								"type": "DatasetReference"
							},
							"name": "deptdataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLoutput",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tEMPLOYEE_ID as string,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tSALARY as string,\n\t\tDEPARTMENT_ID as string,\n\t\tLOCATION_ID as string,\n\t\tHIRE_DATE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Empdataset\nsource(output(\n\t\tDEPARTMENT_ID as string,\n\t\tDEPARTMENT_NAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> deptdataset\nEmpdataset, deptdataset join(Empdataset@DEPARTMENT_ID == deptdataset@DEPARTMENT_ID,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tLAST_NAME,\n\t\tSALARY,\n\t\tDEPARTMENT_ID = Empdataset@DEPARTMENT_ID,\n\t\tLOCATION_ID,\n\t\tHIRE_DATE,\n\t\tDEPARTMENT_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 alterRow(insertIf(SALARY>=\"0\")) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEMPLOYEE_ID as string,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tSALARY as string,\n\t\tDEPARTMENT_ID as string,\n\t\tLOCATION_ID as string,\n\t\tHIRE_DATE as string,\n\t\tDEPARTMENT_NAME as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tLAST_NAME,\n\t\tSALARY,\n\t\tDEPARTMENT_ID,\n\t\tLOCATION_ID,\n\t\tHIRE_DATE,\n\t\tDEPARTMENT_NAME\n\t),\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Alterrow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Empdataset": {},
									"deptdataset": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IR-10min",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-02-27T11:42:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Alterrow')]"
			]
		}
	]
}